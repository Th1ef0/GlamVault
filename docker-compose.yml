services:
  backend:
    build:
      context: .
      dockerfile: ./backend.Dockerfile
    working_dir: /opt/glamvault/api
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    stop_signal: SIGINT
    restart: unless-stopped
    ports:
      - '8000:8000'
    depends_on:
      - postgres
    environment:
      PG_USER: postgres.agkxhhrlhamiyvutsgnb
      PG_PASSWD: '15tuse0WS50L2j4B'
      PG_HOST: aws-0-eu-central-1.pooler.supabase.com
      PG_PORT: 6543
      PG_DB: postgres
  frontend:
    build:
      context: .
      dockerfile: ./frontend.Dockerfile
    stop_signal: SIGINT
    restart: unless-stopped
    ports:
      - '5174:3000'
    depends_on:
      - backend
  postgres:
    image: postgres:13.3-alpine
    hostname: postgres
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=sup3r_s3cr3t_pa55w0rd
      - POSTGRES_DB=postgres
    restart: unless-stopped
    healthcheck:
      test: [CMD, pg_isready, -U, postgres]
      interval: 5s
      timeout: 5s
      retries: 3
    ports:
      - 5433:5432

volumes:
  postgres:
